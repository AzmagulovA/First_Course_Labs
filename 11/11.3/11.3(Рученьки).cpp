
#include <iostream>

using namespace std;

struct Node {
    int d;
    Node* next;
};
void s_push(Node** top, int D) { //функция типа void(ничего не возвращает) которая принимает указатль на вершину стека и переменную которая будет записываться в ячейку
	Node* q; //Создаем новый указатель q, который приравниваем к вершине стека. По сути это и есть наш новый элемент
	q = new Node(); //выделяем память для нового элемента
	q->d = D; //Записываем D в Data элемента
	if (top == NULL) { //Если вершины нет, тоесть стек пустой
		*top = q; //вершиной стека будет новый элемент
	}
	else //если стек не пустой
	{
		q->next = *top; //Проводим связь от нового элемента, к вершине. Тоесть кладем книжку на вершину стопки.
		*top = q; //Пишем, что вершиной теперь является новый элемент
	}
}
void s_print(Node* top) { //принимает указатель на вершину стека		
	Node* q = top; //устанавливаем q на вершину
	while (q != NULL) { //пока q не пустой (while(q) эквивалентно while(q != NULL))
		if (q->d % 2 == 1) {
			cout << q->d << " ";//выводим на экран данные ячейки стека
		}
		q = q->next;//после того как вывели передвигаем q на следующий элемент(ячейку)
	}
}

int main()
{
    setlocale(LC_ALL, "Russian");
	Node* top = NULL; //в начале программы у нас нет очереди, соответственно вершины нет, даем ей значение NULL
	int k = 0;
	int D;
	while (k <= 0) {
		cout << "Введите размер стека" << endl;
		cin >> k;
		
	}
	for (int i = 0; i < k; i++) {
		cout << "Значение " << i+1<<" элемента";
		cin >> D;
		cout << endl;
		s_push(&top, D);
	}
	s_print(top);
	return 0;
    
}
